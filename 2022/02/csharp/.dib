#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!csharp

// This script should be runned by jupyter or ployglot notebook

#!csharp

// Part 1
using System.IO;

string path = "../data.txt";
var lines = File.ReadLines(path);

List<(string, ushort)> lookup = new()
{
    ("A X", 4), // R R -> 3 + 1
    ("A Y", 8), // R P -> 6 + 2
    ("A Z", 3), // R S -> 0 + 3

    ("B X", 1), // P R -> 0 + 1
    ("B Y", 5), // P P -> 3 + 2
    ("B Z", 9), // P S -> 6 + 3

    ("C X", 7), // S R -> 6 + 1
    ("C Y", 2), // S P -> 0 + 2
    ("C Z", 6), // S S -> 3 + 3
};

ushort score = 0;
foreach (string line in lines)
{
    if (string.IsNullOrEmpty(line))
    {
        throw new InvalidDataException();
    }

    int matchedIndex = lookup.FindIndex(x => x.Item1 == line);
    score += lookup[matchedIndex].Item2;
}

Console.WriteLine("Expected total score");
Console.WriteLine($"{nameof(score)}: {score}");

#!csharp

// Part 2
using System.IO;

List<(string, ushort)> lookup = new()
{
    ("A X", 3), // R S -> 0 + 3
    ("A Y", 4), // R R -> 3 + 1
    ("A Z", 8), // R P -> 6 + 2

    ("B X", 1), // P R -> 0 + 1
    ("B Y", 5), // P P -> 3 + 2
    ("B Z", 9), // P S -> 6 + 3

    ("C X", 2), // S P -> 0 + 2
    ("C Y", 6), // S S -> 3 + 3
    ("C Z", 7), // S R -> 6 + 1
};

ushort score = 0;
foreach (string line in lines)
{
    if (string.IsNullOrEmpty(line))
    {
        throw new InvalidDataException();
    }

    int matchedIndex = lookup.FindIndex(x => x.Item1 == line);
    score += lookup[matchedIndex].Item2;
}

Console.WriteLine("Expected total score");
Console.WriteLine($"{nameof(score)}: {score}");
